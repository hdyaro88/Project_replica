{"version":3,"sources":["Components/Home/Post/PostItem.module.css","Components/Header/Header.module.css","Components/modal/modal.module.css","Components/Home/Home.module.css","Components/Login/Login.module.css","Components/MainScreen/SignUp.module.css","Components/MainScreen/MainPage.module.css","Components/UI/Card.module.css","Components/Home/Post/Post.module.css","Components/Context/List-Context.js","Components/UI/Button.js","Components/Header/Header.js","Components/UI/Card.js","Hooks/use-http.js","Hooks/api.js","Components/Home/Home.js","Components/modal/Modal.js","Components/Home/Post/Postitem.js","Components/Home/Post/TitlePost.js","Components/Home/Post/Post.js","Components/Login/Login.js","Components/MainScreen/SignUp.js","Components/MainScreen/MainPage.js","App.js","Components/Context/ContextProvider.js","index.js"],"names":["module","exports","ListContext","createContext","userId","items","changed","add","post","delete","id","addUser","token","update","Button","props","onClick","className","styles","children","Header","location","useLocation","history","useHistory","useState","showPost","setshowPost","navbar","favbar","Appname","buttons","ShowSignUp","navbar_button","ShowSignIn","isLoggedIn","push","pathname","onLogout","Card","classes","card","HTTPReducer","state","action","type","status","data","error","value","useHTTP","RequestFunction","startWithPending","useReducer","httpState","disptach","sendRequest","useCallback","a","ResData","message","FirebaseApi","getAuthentication","loginCredential","fetch","method","body","JSON","stringify","headers","response","ok","Error","json","success","registered","localId","sendUpdate","updatedData","fetchItems","key","transformedItems","itemObj","initial","Home","listCtx","useContext","nameRef","useRef","ageRef","relationRef","useEffect","onSubmit","event","preventDefault","Math","random","name","current","age","relation","ref","required","Backdrop","backdrop","ModelView","setname","setage","setrelation","item","onChange","val","target","trim","lenth","buttonItem","Create_button","Modal","Fragment","onClose","PostItem","isClicked","setisClicked","editIsClicked","seteditIsClicked","flex_container","downbar","downbar_button","TitlePost","Post","document","style","marginTop","length","nopost","map","Login","emailRef","passwordRef","Content","Login_button","onLoggin","toString","replace","window","alert","onSignUp","enteredEmail","enteredPassword","email","password","returnSecureToken","SignUp","showLoading","setShowLoading","onSignIn","then","res","errorMessage","MainPage","setShowSignUp","setShowSignIn","signUpHandler","ActionButton","App","localStorage","getItem","setIsLoggedIn","aboutToLogOut","setaboutToLogOut","console","log","when","onShowPost","setItem","path","exact","to","list","defaultState","postReducer","existingPostId","findIndex","updatedpost","filter","Id","ContextProvider","postState","postActionDisptacher","listContext","Provider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.599e10b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"PostItem_card__1ytqO\",\"flex_container\":\"PostItem_flex_container__2u0w_\",\"downbar\":\"PostItem_downbar__1vcJM\",\"downbar_button\":\"PostItem_downbar_button__1oZbN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Header_navbar__PIi9L\",\"buttons\":\"Header_buttons__N2BKK\",\"navbar_button\":\"Header_navbar_button__1VHSP\",\"favbar\":\"Header_favbar__2ZAZm\",\"Appname\":\"Header_Appname__EsSFr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"modal_backdrop__2GYJw\",\"card\":\"modal_card__2pdRx\",\"item\":\"modal_item__1-osQ\",\"buttonItem\":\"modal_buttonItem__3R48l\",\"Create_button\":\"modal_Create_button__2GGro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Home_card__222yl\",\"item\":\"Home_item__2frsi\",\"buttonItem\":\"Home_buttonItem__VEaJH\",\"Create_button\":\"Home_Create_button__2sC_M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Login_card__8QBb-\",\"item\":\"Login_item__2mxWl\",\"buttonItem\":\"Login_buttonItem__3LDhG\",\"Login_button\":\"Login_Login_button__34Mns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SignUp_card__3bMf2\",\"item\":\"SignUp_item__mVLLS\",\"buttonItem\":\"SignUp_buttonItem__1sdP3\",\"Login_button\":\"SignUp_Login_button__2mVrp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex_container\":\"MainPage_flex_container__1gM05\",\"ActionButton\":\"MainPage_ActionButton__2Wim7\",\"SignIn\":\"MainPage_SignIn__1Vhu0\",\"SignUp\":\"MainPage_SignUp__1vHrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1K5uX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nopost\":\"Post_nopost__2m5Va\"};","import { createContext } from \"react\";\n\nconst ListContext = createContext(\n    {   userId : \"\",\n        items : [],\n        changed : false,\n        add : (post) => {},\n        delete : (id) => {} ,\n        addUser : (token) => {} ,\n        update : (items) => {}\n    }\n)\nexport default ListContext;","import styles from \"./Button.module.css\"\nconst Button = (props) => {\n    return (\n        <button onClick={props.onClick} className={`${props.className} ${styles.Button}`}>\n            {props.children}\n        </button>\n    )\n}\nexport default Button;","import styles from \"./Header.module.css\";\nimport Button from \"../UI/Button\"\nimport { useLocation , useHistory } from \"react-router\";\nimport { useState } from \"react\";\nconst Header = (props) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [showPost , setshowPost] = useState(false)\n  const onClickHandler = () => {\n    if(showPost) {\n      history.push(\"/home\")\n      setshowPost(false)\n    }\n    else {\n    history.push(`${location.pathname}/post`)\n    setshowPost(true)\n    }\n  }\n  return (\n    <div className={styles.navbar}>\n      <div className={styles.favbar}><h1 className={styles.Appname}>FaceBar</h1></div>\n    \n  <div className={styles.buttons}>\n  {props.ShowSignUp && <Button onClick={props.onClick} className={styles.navbar_button}>SignUp</Button>}\n  {props.ShowSignIn && <Button onClick={props.onClick} className={styles.navbar_button}>SignIn</Button>}\n  {props.isLoggedIn && <Button onClick={onClickHandler} className={styles.navbar_button}>{showPost ? \"Home\" : \"Post\"}</Button>}\n  {props.isLoggedIn && <Button onClick={props.onLogout} className={styles.navbar_button}>Logout</Button>}\n  </div>\n</div>\n  );\n};\nexport default Header;\n","import classes from './Card.module.css';\n\nconst Card = props => {\n  return <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n};\n\nexport default Card;","import { useCallback, useReducer } from \"react\";\r\n\r\nconst HTTPReducer = (state , action) => {\r\n    if(action.type === \"sending\") {\r\n        return {\r\n            status : \"pending\" ,\r\n            data : state.data,\r\n            error : state.error\r\n        }\r\n    }\r\n        if(action.type === \"success\") {\r\n            return {\r\n                status : \"completed\" ,\r\n                data : action.data ,\r\n                error : state.error\r\n            }\r\n        }\r\n        if(action.type === \"error\") {\r\n            return {\r\n                status : \"completed\",\r\n                data : state.data ,\r\n                error : action.value\r\n            }\r\n        }\r\n}\r\n\r\nconst useHTTP = (RequestFunction , startWithPending) => {\r\n  const [httpState , disptach] = useReducer(HTTPReducer , {status : startWithPending ? \"pending\" : null , data : null , error : null} );\r\n    const sendRequest = useCallback( async (data) => {\r\n            disptach({type : \"sending\"})\r\n            try {\r\n                const ResData =  await RequestFunction(data);\r\n                disptach({type : \"success\" , data : ResData})\r\n             }\r\n             catch(error) {\r\n                  disptach({type : \"error\" , value : error.message || \"something went wrong\"})\r\n             }\r\n           \r\n    } , [RequestFunction]);\r\n\r\n    return {\r\n        sendRequest ,\r\n        ...httpState\r\n    }\r\n}\r\n export default useHTTP;","const FirebaseApi = \"https://react-9e703-default-rtdb.firebaseio.com/\";\r\nconst authApi = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAZjoy8dPiBktGsrJ_4z45RCFrc-TxGnko\"\r\n\r\nexport const getAuthentication = async (loginCredential) => {\r\n     const response = await fetch(`${authApi}` , {\r\n         method : \"POST\" ,\r\n         body : JSON.stringify(loginCredential) ,\r\n         headers : {\r\n            'Content-Type': 'application/json'\r\n         }\r\n     })\r\n     if(!response.ok) {\r\n         throw new Error(\"Login Failed\")\r\n     }\r\n     const data = await response.json()\r\n     return {\r\n         success : data.registered || false,\r\n         userId : data.localId\r\n     } ;\r\n}\r\n\r\nexport const sendUpdate = async (updatedData) => {\r\n    const response = await fetch(`${FirebaseApi}/items/${updatedData.userId}.json` , { \r\n        method : \"PUT\" ,\r\n        body : JSON.stringify(updatedData.items) ,\r\n        headers : {\r\n           'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    if(!response.ok) {\r\n        throw new Error(\"Send data Failed\")\r\n    }\r\n}\r\n\r\nexport const fetchItems = async (updatedData) => {\r\n    const response = await fetch(`${FirebaseApi}/items/${updatedData.userId}.json`)\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n      throw new Error(data.message || 'Could not get items.');\r\n    }\r\n  \r\n    const transformedItems = [];\r\n  \r\n    for (const key in data) {\r\n      const itemObj = {\r\n        id: key,\r\n        ...data[key],\r\n      };\r\n      transformedItems.push(itemObj);\r\n    }\r\n    return transformedItems;\r\n}","import Card from \"../UI/Card\";\nimport * as classes from \"./Home.module.css\";\nimport Button from \"../UI/Button\";\nimport { useContext,  useEffect,  useRef } from \"react\";\nimport ListContext from \"../Context/List-Context\";\nimport useHTTP from \"../../Hooks/use-http\";\nimport { fetchItems } from \"../../Hooks/api\";\nlet initial = true;\n\nconst Home = (props) => {\nconst listCtx = useContext(ListContext)\nconst {sendRequest , status , data} = useHTTP(fetchItems);\n  const nameRef = useRef();\n  const ageRef = useRef();\n  const relationRef = useRef();\n  const {userId } = listCtx\n  useEffect(() => {\n    if(initial) {\n      sendRequest({userId : userId});\n      initial = false;\n    }\n    return () => {\n      if(status === \"completed\") {\n        listCtx.update(data)\n      }\n    }\n  } , [status , sendRequest , userId]);\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const post = {\n      id: Math.random(),\n      name: nameRef.current.value,\n      age: ageRef.current.value,\n      relation: relationRef.current.value,\n    };\n    listCtx.add(post)\n    nameRef.current.value = \"\";\n    ageRef.current.value = \"\";\n    relationRef.current.value =\"\";\n  };\n\n  return (\n    <div className={classes.card}>\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className={classes.item}>\n            <label>Name</label>\n            <input ref={nameRef}  required type=\"text\" ></input>\n          </div>\n          <div className={classes.item}>\n            <label>Age</label>\n            <input ref={ageRef}  required type=\"number\" ></input>\n          </div>\n          <div className={classes.item}>\n            <label>Relation</label>\n            <input ref={relationRef} required type=\"text\" ></input>\n          </div>\n          <div className={classes.buttonItem}>\n            <Button className={classes.Create_button}>Create Post</Button>\n          </div>\n        </form>\n      </Card>\n    </div>\n  );\n};\nexport default Home;\n","import React, { useContext } from \"react\"\nimport {  useState } from \"react\";\nimport ListContext from \"../Context/List-Context\";\nimport Button from \"../UI/Button\"\nimport Card from \"../UI/Card\"\nimport classes from \"./modal.module.css\"\nconst Backdrop = (props) => {\n    return (\n        <div onClick={props.onClick} className={classes.backdrop}>\n        </div>\n    )\n} \nconst ModelView = (props) => {\n  const listCtx = useContext(ListContext)\n  const [name, setname] = useState('');\n  const [age, setage] = useState('');\n  const [relation, setrelation] = useState('');\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const post = {\n      id: props.id,\n      name: name,\n      age: age,\n      relation: relation,\n    };\n     listCtx.add(post);\n    setname(\"\");\n    setrelation(\"\");\n    setage(\"\");\n    props.onClick();\n  };\n  const updatenameHandler = (event) => {\n    const val = event.target.value;\n    if (val.trim().lenth === 0) {\n      return;\n    }\n    setname(val);\n  };\n  const updateageHandler = (event) => {\n    const val = event.target.value;\n    if (val.trim().lenth === 0) {\n      return;\n    }\n    setage(+val);\n  };\n  const updaterelationHandler = (event) => {\n    const val = event.target.value;\n    if (val.trim().lenth === 0) {\n      return;\n    }\n    setrelation(val);\n  };\n\n  return (\n    <div className={classes.card}>\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className={classes.item}>\n            <label>Name</label>\n            <input value={name} type=\"text\" onChange={updatenameHandler}></input>\n          </div>\n          <div className={classes.item}>\n            <label>Age</label>\n            <input value={age} type=\"number\" onChange={updateageHandler}></input>\n          </div>\n          <div className={classes.item}>\n            <label>Relation</label>\n            <input value={relation} type=\"text\" onChange={updaterelationHandler}></input>\n          </div>\n          <div className={classes.buttonItem}>\n            <Button className={classes.Create_button}>Submit</Button>\n          </div>\n        </form>\n      </Card>\n    </div>\n  );\n}\nconst Modal = (props) => {\n    return (\n        <React.Fragment>\n        <Backdrop onClick={props.onClose}/>\n        <ModelView id = {props.id} onClick={props.onClose} />\n        </React.Fragment>\n        \n        \n    )\n}\nexport default Modal;","import React, { useContext, useState } from \"react\";\nimport ListContext from \"../../Context/List-Context\";\nimport Modal from \"../../modal/Modal\";\nimport Button from \"../../UI/Button\";\nimport Card from \"../../UI/Card\";\nimport styles from \"./PostItem.module.css\";\nconst PostItem = (props) => {\n    const listCtx = useContext(ListContext)\n   const[isClicked , setisClicked] =  useState(false)\n   const[editIsClicked , seteditIsClicked] = useState(false)\n   const clickHandler = () => {\n        setisClicked(!isClicked)\n   }\n   const deleteClickHandler = () => {\n       listCtx.delete(props.id)\n   }\n   const hideMoalhandler = () => {\n    seteditIsClicked(false);\n  }\n  const showModalHandler = () => {\n    seteditIsClicked(true)\n  }\n  return (\n    <React.Fragment>\n      <div onClick={clickHandler} className={styles.card}>\n        <Card>\n          <div className={styles.flex_container}>\n            <div>\n              <label>{props.name}</label>\n            </div>\n            <div>\n              <label>{props.age}</label>\n            </div>\n            <div>\n              <label>{props.relation}</label>\n            </div>\n          </div>\n        </Card>\n      </div>\n      {isClicked && (\n          <div className={styles.card}>\n          <Card className={styles.downbar}>\n          <Button onClick={showModalHandler} className={styles.downbar_button}>Edit</Button>\n          {editIsClicked && <Modal onClose={hideMoalhandler}  id = {props.id}/>}\n          <Button onClick={deleteClickHandler} className={styles.downbar_button}>Delete</Button>\n         </Card>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\nexport default PostItem;\n","import Card from \"../../UI/Card\";\nimport styles from \"./PostItem.module.css\"\nconst TitlePost = () => {\n    return (\n        <div className={styles.card}>\n            <Card>\n                <div className={styles.flex_container}>\n                <div>\n                <label><b>Name</b></label>\n                </div>\n                <div>\n                <label><b>Age</b></label>\n                </div>\n                <div>\n                <label><b>Relation</b></label>\n                </div>\n                </div>\n            </Card>\n        </div>\n    )\n}\nexport default TitlePost;","import { useContext} from \"react\";\nimport ListContext from \"../../Context/List-Context\";\nimport PostItem from \"./Postitem\";\nimport TitlePost from \"./TitlePost\";\nimport styles from \"./Post.module.css\"\n\nconst Post = (props) => {\n    const listCtx = useContext(ListContext);\n  document.body.style.marginTop = \"6rem\";\n  return (\n    <div>\n      <TitlePost/>\n      {listCtx.items.length === 0 && <h1 className={styles.nopost}>No Posts Yet</h1>}\n      {listCtx.items.map((post) => \n          <PostItem  key = {post.id} id={post.id} name={post.name} age={post.age} relation={post.relation} />\n      )}\n    </div>\n  );\n};\nexport default Post;\n","import React, { useRef, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { getAuthentication } from \"../../Hooks/api\";\nimport useHTTP from \"../../Hooks/use-http\";\nimport Header from \"../Header/Header\";\nimport Button from \"../UI/Button\";\nimport Card from \"../UI/Card\";\nimport styles from \"./Login.module.css\";\nimport ListContext from \"../Context/List-Context\";\n\nconst Login = (props) => {\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const history = useHistory();\n  const listCtx = useContext(ListContext)\n  const { sendRequest, status, data, error } = useHTTP(getAuthentication);\n  let Content = <Button className={styles.Login_button}>Login</Button>;\n  if (status === \"pending\") {\n    Content = <p>Loading..</p>;\n  }\n  const { onLoggin } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onLoggin();\n      listCtx.addUser(data.userId.toString());\n      history.replace(\"/home\");\n    }\n  }, [status, history, data , error, listCtx , onLoggin]);\n\n  if (error) {\n    window.alert(error);\n  }\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n    const authObject = {\n      email: enteredEmail,\n      password: enteredPassword,\n      returnSecureToken: true,\n    };\n    sendRequest(authObject);\n  };\n  return (\n    <React.Fragment>\n      <Header onClick={props.onSignUp} ShowSignIn={false} ShowSignUp={true} />\n      <div className={styles.card}>\n        <Card>\n          <form onSubmit={submitHandler}>\n            <div className={styles.item}>\n              <label>Email</label>\n              <input ref={emailRef} type=\"email\" required=\"@\"></input>\n            </div>\n            <div className={styles.item}>\n              <label>PassWord</label>\n              <input ref={passwordRef} type=\"password\" required></input>\n            </div>\n            <div className={styles.buttonItem}>{Content}</div>\n          </form>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Login;\n","import React, { useRef, useState } from \"react\";\nimport Header from \"../Header/Header\";\nimport Button from \"../UI/Button\";\nimport Card from \"../UI/Card\";\nimport styles from \"./SignUp.module.css\"\n\nconst SignUp = (props) => {\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const [showLoading , setShowLoading] = useState(false);\n    const submitHandler = (event) => {\n        const enteredEmail = emailRef.current.value;\n        const enteredPassword = passwordRef.current.value;\n        event.preventDefault();\n        setShowLoading(true);\n        const url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAZjoy8dPiBktGsrJ_4z45RCFrc-TxGnko';\n        fetch(url ,\n          {\n              method : 'POST',\n              body : JSON.stringify(\n                  {\n                      email : enteredEmail ,\n                      password : enteredPassword ,\n                      returnSecureToken : true,\n                  }\n              ),\n              headers : {\n                  'Content-Type' : \"application/json\"\n              }\n          }\n        ).then(res => {\n            setShowLoading(false);\n            if(res.ok) {\n                props.onSubmit();\n            }\n            else {\n                return res.json().then(data => {\n                    //show error\n                    let errorMessage = \"Authentication Error\";\n                    if(data && data.error && data.error.message) {\n                        errorMessage = data.error.message;\n                    }\n                    alert(errorMessage);\n                })\n            }\n        })\n    }\n    return(\n        <React.Fragment>\n        <Header onClick={props.onSignIn} ShowSignIn={true} ShowSignUp ={false} />\n        <div className={styles.card}>\n        <Card>\n        <form onSubmit={submitHandler} >\n            <div className={styles.item}>\n            <label>Email</label>\n            <input type=\"email\" ref={emailRef} required></input>\n            </div>\n            <div className={styles.item}>\n            <label >PassWord</label>\n            <input type=\"password\" ref={passwordRef} required></input>\n            </div>\n            <div className={styles.buttonItem}>\n            {showLoading &&  <p>Please Wait ...</p>}\n            {!showLoading && <Button className={styles.Login_button}>Register</Button>}\n            </div>\n        </form>\n        </Card>\n        </div>\n        </React.Fragment>\n    )\n\n}\nexport default SignUp;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Login from \"../Login/Login\";\nimport styles from \"./MainPage.module.css\"\nimport SignUp from \"./SignUp\";\nconst MainPage = (props) => {\n    const history = useHistory()\n    const [ShowSignUp , setShowSignUp] = useState(false);\n    const [ShowSignIn , setShowSignIn] = useState(true);\n    const signUpHandler = () => {\n        setShowSignUp(!ShowSignUp)\n        setShowSignIn(false);\n    }\n    const signInHandler = ()=> {\n        setShowSignIn(true);\n        setShowSignUp(false)\n        history.replace('/')\n\n    }\n    const submitHandler =() => {\n        setShowSignIn(true);\n        setShowSignUp(false);\n    }\n    document.body.style.marginTop = \"6rem\"\n     return (\n        <React.Fragment>\n         <div className={styles.flex_container}>\n         <div className = {styles.ActionButton}>\n        {ShowSignUp && <SignUp onSignIn={signInHandler} onSubmit={submitHandler}  onSignUp={signUpHandler}/>}\n        {ShowSignIn && <Login onSignUp={signUpHandler} onLoggin={props.onSignIn} />}\n         </div>\n         </div>\n         </React.Fragment>\n     )\n}\nexport default MainPage;","import React, {useContext , useEffect, useState } from \"react\";\nimport { Route ,Redirect , Switch, useHistory , Prompt } from \"react-router-dom\";\nimport \"./App.css\";\nimport ListContext from \"./Components/Context/List-Context\";\nimport Header from \"./Components/Header/Header\";\nimport Home from \"./Components/Home/Home\";\nimport Post from \"./Components/Home/Post/Post\";\nimport MainPage from \"./Components/MainScreen/MainPage\";\nimport { sendUpdate } from \"./Hooks/api\";\nimport useHTTP from \"./Hooks/use-http\";\nlet initial = true;\nfunction App() {\n  const listCtx = useContext(ListContext)\n  const history = useHistory()\n  const {sendRequest} = useHTTP(sendUpdate)\n  const val = localStorage.getItem(\"isLoggedIn\") === \"1\"; \n  const [isLoggedIn, setIsLoggedIn] = useState(val);\n  const [aboutToLogOut , setaboutToLogOut] = useState(false)\n  const [showPost, setshowPost] = useState(false);\n  const LoginHandler = () => {\n    setIsLoggedIn(true);\n  };\n  useEffect(() => {\n     if(initial) {\n       initial = false;\n     }\n     else if(isLoggedIn && listCtx.changed) {\n       sendRequest({items : listCtx.items , userId : listCtx.userId})\n     }\n  },[isLoggedIn , listCtx.items , sendRequest  , listCtx.changed , listCtx.userId] );\n  useEffect(() => {\n    console.log(\"hello\")\n    history.replace(\"/main\")\n  } , [aboutToLogOut , history])\n  const LogoutHandler = () => {\n    localStorage.setItem(\"isLoggedIn\" , \"0\");\n    setaboutToLogOut(true)\n    setIsLoggedIn(false);\n    setshowPost(false);\n  };\n  return (\n    <> \n     <Prompt when={aboutToLogOut} message=\"Are you sure you want to leave?\"/>\n      <Header\n        ShowSignIn ={false}\n        ShowSignUp ={false}\n        onShowPost={showPost}\n        onLogout={LogoutHandler}\n        isLoggedIn={isLoggedIn}\n      />\n      <Switch>\n      <Route path=\"/\" exact>\n      {isLoggedIn && <Redirect to=\"/home\"/>}\n      {!isLoggedIn && <Redirect to=\"/main\"/>}\n      </Route>\n      <Route path=\"/home/post\" exact>\n      {isLoggedIn &&  <Post list={listCtx.items} />}\n      {!isLoggedIn && <Redirect to=\"/main\"/>}\n      </Route>\n      <Route path=\"/home\" exact>\n      {isLoggedIn && <Home/>}\n      {!isLoggedIn && <Redirect to=\"/main\"/>}\n      </Route>\n      <Route path=\"/main\" exact>\n      {<MainPage onSignIn={LoginHandler} />}\n      </Route>\n      <Route path=\"*\">\n       <Redirect to=\"/main\"/>\n      </Route>\n      </Switch>\n      </>\n  );\n}\n\nexport default App;\n","import {useReducer } from \"react\"\nimport ListContext from \"./List-Context\"\n  const defaultState = {\n      items : [] ,\n      userId : \"\" ,\n      changed : false\n  }\n  const postReducer = (state , action) => {\n      if(action.type === \"LOGGER\") {\n          return {\n              items : state.items ,\n              userId : action.value,\n              changed : state.changed\n          }\n      }\n      if(action.type === \"UPDATE\") {\n          return {\n            items : action.value ,\n            userId : state.userId,\n            changed : state.changed\n          }\n      }\n      if(action.type === \"ADD\") {\n          const existingPostId = state.items.findIndex(post => post.id === action.Post.id)\n          const existingPost = state.items[existingPostId];\n          if(existingPost) {\n             const updatedpost = [...state.items]\n             updatedpost[existingPostId] = action.Post;\n             return {items : updatedpost , userId : state.userId , changed : state.changed}\n          }\n          return {items: [...state.items , action.Post] , userId : state.userId , changed : true};\n      }\n      else if(action.type === \"DEL\") {\n          const list = state.items.filter(post => post.id !== action.Id)\n          return {items : list , userId : state.userId , changed : true}\n      }\n      return defaultState;\n  }\n\nconst ContextProvider = (props) => {\n    const[postState , postActionDisptacher] = useReducer(postReducer , defaultState)\n    const addPostHandler = (post) => {\n        postActionDisptacher({type : \"ADD\" , Post : post});\n    }\n    const deletePostHandler = (id) => {\n        postActionDisptacher({type : \"DEL\" , Id : id})\n    }\n    const addUserHandler = (token) => {\n        postActionDisptacher({type : \"LOGGER\" , value : token})\n    }\n    const updateHandler = (items) => {\n        postActionDisptacher({type : \"UPDATE\" , value : items})\n    }\n    const listContext = {\n        userId : postState.userId,\n        items : postState.items,\n        changed : postState.changed,\n        add : addPostHandler,\n        delete : deletePostHandler ,\n        addUser : addUserHandler ,\n        update : updateHandler\n    }\n    return (\n        <ListContext.Provider value={listContext}>\n            {props.children}\n        </ListContext.Provider>\n    )\n}\nexport default ContextProvider;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport ContextProvider from \"./Components/Context/ContextProvider\";\nReactDOM.render(<BrowserRouter><ContextProvider><App /></ContextProvider></BrowserRouter>, document.getElementById(\"root\"));\n"],"sourceRoot":""}